{
  "questions": [
    {
      "id": 1,
      "questionText": "Which of the following does TypeScript use to specify types?",
      "options": [
        {"text": ":", "correct": true},
        {"text": ";", "correct": false},
        {"text": "!", "correct": false},
        {"text": "&", "correct": false}
      ],
      "explanation": "TS uses a colon (:) to separate the property name from the property type"
    },
    {
      "id": 2,
      "questionText": "Which of the following is NOT a type used in TypeScript?",
      "options": [
        {"text": "number", "correct": false},
        {"text": "string", "correct": false},
        {"text": "boolean", "correct": false},
        {"text": "enum", "correct": true}
      ],
      "explanation": "enum is not used as a type in TypeScript"
    },
    {
      "id": 3,
      "questionText": "How can we specify properties and methods for an object in TypeScript?",
      "options": [
        {"text": "Use classes.", "correct": false},
        {"text": "Use interfaces.", "correct": true},
        {"text": "Use enums.", "correct": false},
        {"text": "Use async/await.", "correct": false}
      ],
      "explanation": "interfaces are typically used to list the properties and methods for an object"
    },
    {
      "id": 4,
      "questionText": "How else can Array<number> be written in TypeScript?",
      "options": [
        {"text": "@number", "correct": false},
        {"text": "number[]", "correct": true},
        {"text": "number!", "correct": false},
        {"text": "number?", "correct": false}
      ],
      "explanation": "number[] is another way of writing Array<number> in TypeScript"
    },
    {
      "id": 5,
      "questionText": "In which of these does a class take parameters?",
      "options": [
        {"text": "constructor", "correct": true},
        {"text": "destructor", "correct": false},
        {"text": "import", "correct": false},
        {"text": "subscribe", "correct": false}
      ],
      "explanation": "a constructor is used by a class to take in parameters"
    },
    {
      "id": 6,
      "questionText": "Which is NOT an access modifier?",
      "options": [
        {"text": "private", "correct": false},
        {"text": "protected", "correct": false},
        {"text": "public", "correct": false},
        {"text": "async", "correct": true}
      ],
      "explanation": "async is not used as an access modifier type in TypeScript"
    },
    {
      "id": 7,
      "questionText": "Which keyword allows us to share information between files in TypeScript?",
      "options": [
        {"text": "import", "correct": false},
        {"text": "export", "correct": true},
        {"text": "async", "correct": false},
        {"text": "constructor", "correct": false}
      ],
      "explanation": "the export keyword allows for the information to be transmitted between files"
    },
    {
      "id": 8,
      "questionText": "Which is an array method to generate a new array based on a condition?",
      "options": [
        {"text": "filter", "correct": true},
        {"text": "map", "correct": false},
        {"text": "async", "correct": false},
        {"text": "enum", "correct": false}
      ],
      "explanation": "filter is a method used to conditionally create a new array"
    },
    {
      "id": 9,
      "questionText": "How is a property accessible within a class?",
      "options": [
        {"text": "Using this.propertyName", "correct": true},
        {"text": "Accessors", "correct": false},
        {"text": "Destructuring", "correct": false},
        {"text": "Arrow function", "correct": false}
      ],
      "explanation": "this.propertyName is the way to access a specific property within a class"
    }
  ]
}
